// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Mon Feb 26 17:33:53 2024

FIM FIM_inst
(
	.clk_50M(clk_50M_sig) ,	// input  clk_50M_sig
	.tx_busy(tx_busy_sig) ,	// input  tx_busy_sig
	.en(en_sig) ,	// input  en_sig
	.red_in(red_in_sig) ,	// input  red_in_sig
	.tx_en(tx_en_sig) ,	// output  tx_en_sig
	.data_out(data_out_sig) ,	// output [7:0] data_out_sig
	.BPM_msg(BPM_msg_sig) ,	// output  BPM_msg_sig
	.end_node(end_node_sig) ,	// output [4:0] end_node_sig
	.blue(blue_sig) ,	// output  blue_sig
	.green(green_sig) ,	// output  green_sig
	.LED_num(LED_num_sig) ,	// output [1:0] LED_num_sig
	.red(red_sig) ,	// output  red_sig
	.bdm_done_wire(bdm_done_wire_sig) ,	// output  bdm_done_wire_sig
	.in_wire(in_wire_sig) 	// output [1:0] in_wire_sig
);

defparam FIM_inst.IDLE = 'b00;
defparam FIM_inst.SEND = 'b01;
defparam FIM_inst.WAIT = 'b10;
defparam FIM_inst.FIM = 'b00;
defparam FIM_inst.BPM = 'b01;
defparam FIM_inst.BDM = 'b10;
